{
  "openapi": "3.0.0",
  "info": {
    "title": "FOSSA Core App",
    "description": "This is the FOSSA core API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.3.8"
  },
  "servers": [
    {
      "url": "https://app.fossa.com/api",
      "description": "FOSSA Service"
    }
  ],
  "security": [
    {
      "tokenAuth": []
    }
  ],
  "tags": [
    {
      "name": "Projects"
    },
    {
      "name": "Issues v1"
    },
    {
      "name": "Users"
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of projects",
        "description": "List all projects in the user's organization if the user has the 'admin'\npermission. Otherwise, list all projects in the user's team.\n",
        "operationId": "listProjects",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "the ID of the organization from which to fetch projects",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "a search string to filter projects by title",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sorting parameters",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "-title",
                "status",
                "-status",
                "stats",
                "-stats"
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of projects to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "maximum number of projects to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "projects matching the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectLocator}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Deletes a project",
        "description": "A user with the 'admin' permission may delete any project owned by their\norganization. A user with the 'team_admin' permission may delete only\nprojects in their team.\n",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "projectLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the project was deleted"
          },
          "403": {
            "description": "requesting user is not permitted to delete the project"
          }
        }
      }
    },
    "/projects/{projectLocator}/export-issues": {
      "get": {
        "tags": [
          "Issues v1"
        ],
        "summary": "Return all issues for a project",
        "description": "List all issues for a project. If `revisionId` is specified then all issues up to that revision will be returned.\nThis endpoint has been deprecated, use `/projects/{projectLocator}/export-issues/json` which collapses the `CWE` and `Reference` fields of `Vulnerability Issues` items into the `CWES` and `References` fields. If you need a CSV you can use `/projects/{projectLocator}/export-issues/csv` which behaves like this endpoint.\n",
        "operationId": "exportIssues",
        "parameters": [
          {
            "name": "projectLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "If set to `csv` the response will be in csv format. If omitted, the response will be in JSON.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All issues for a project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "428": {
            "description": "Invalid `revisionId`."
          }
        },
        "deprecated": true
      }
    },
    "/projects/{projectLocator}/export-issues/json": {
      "get": {
        "tags": [
          "Issues v1"
        ],
        "summary": "Return all issues for a project",
        "description": "List all issues for a project. If `revisionId` is specified then all issues up to that revision will be returned.\n",
        "operationId": "exportIssuesJson",
        "parameters": [
          {
            "name": "projectLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All issues for a project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "428": {
            "description": "Invalid `revisionId`."
          }
        }
      }
    },
    "/projects/{projectLocator}/export-issues/csv": {
      "get": {
        "tags": [
          "Issues v1"
        ],
        "summary": "Return all issues for a project",
        "description": "List all issues for a project. If `revisionId` is specified then all issues up to that revision will be returned.\n",
        "operationId": "exportIssuesCSV",
        "parameters": [
          {
            "name": "projectLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All issues for a project",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "428": {
            "description": "Invalid `revisionId`."
          }
        }
      }
    },
    "/revisions": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns a list of revisions for a project",
        "description": "List all revisions for a project\n",
        "operationId": "listRevisions",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "the url-encoded locator of the project",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of revisions to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "maximum number of revisions to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "projects matching the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Revision"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/revisions/{revisionLocator}/dependencies": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns the dependencies for a revision",
        "description": "This will return all of the dependencies found when analyzing the specified revision.\n",
        "operationId": "getRevisionDependencies",
        "parameters": [
          {
            "name": "revisionLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DependenciesResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "requesting user is not permitted to view the project"
          }
        }
      }
    },
    "/revisions/{revisionLocator}/attribution/email": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Emails an attribution report",
        "description": "This will return all of the dependencies found when analyzing the specified revision.\n",
        "operationId": "getRevisionAttributionEmail",
        "parameters": [
          {
            "name": "revisionLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "HTML",
                "TXT",
                "CSV",
                "MD",
                "SPDX",
                "PDF"
              ]
            }
          },
          {
            "name": "emailAddress",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeepDependencies",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeDirectDependencies",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeLicenseList",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeLicenseScan",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeProjectLicense",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeCopyrightList",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeDependencySummary",
            "in": "query",
            "description": "Not available for CSV reports",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ID of the queued task that will generate the report"
          }
        }
      }
    },
    "/revisions/{revisionLocator}/attribution/json": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns all the data for an attribution report in JSON",
        "description": "This will return all of the dependencies found when analyzing the specified revision.\n",
        "operationId": "getRevisionAttributionJSON",
        "parameters": [
          {
            "name": "revisionLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeepDependencies",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeDirectDependencies",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeLicenseList",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeLicenseScan",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeProjectLicense",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeCopyrightList",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeHashAndVersionData",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON attribution report"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of users",
        "description": "List all the users in the user's organization.\n",
        "operationId": "listUsers",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "a search string to filter users by email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "users matching the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a user by ID",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the user was deleted"
          },
          "403": {
            "description": "requesting user is not permitted to delete the user"
          }
        }
      }
    },
    "/user/{userId}/permission": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Sets the role of a user in the organization",
        "operationId": "putUserPermission",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userId_permission_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the user's organizational role was updated"
          }
        }
      }
    },
    "/user/{userId}/enabled": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Enable or disable the user account",
        "operationId": "putUserEnabled",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userId_enabled_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the user's organizational role was updated"
          }
        }
      }
    },
    "/user/{userId}/team-roles": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Sets the roles of a user in teams. This can be used to edit the user's role in a single team or in any number of teams the user is already in; the request body must be an array for all requests.",
        "operationId": "putUserTeamRoles",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/userId_teamroles_body"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "the user's roles were updated"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of all roles defined in the user's organization",
        "operationId": "listRoles",
        "responses": {
          "200": {
            "description": "a list of all roles defined in the user's organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_2"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of teams",
        "description": "List all the teams in the user's organization.\n",
        "operationId": "listTeams",
        "responses": {
          "200": {
            "description": "projects matching the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a team",
        "operationId": "createTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teams_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates some properties of a team",
        "operationId": "putTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teams_teamId_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "team was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}/projects": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Assigns the set of projects that a team can access",
        "description": "A user with the 'admin' permission may assign any project to any team in\ntheir organization. A user with the 'team_admin' permission may assign\nprojects from their own teams to teams of which they are a member.\n",
        "operationId": "putTeamProjects",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "the new list of project locators",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teamId_projects_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "projects were assigned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}/users": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Assigns the set of users in a team, add users to a team, remove users from a team",
        "description": "A user with the 'Admin' role may assign any user to any team in their organization. A user with the 'Team Admin' role in a team may edit the users in the teams where they are a 'Team Admin'.\n",
        "operationId": "putTeamUsers",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "an object describing the change to the team's users",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teamId_users_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "projects were assigned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/invite": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates and sends an invitation for a user to join your organization",
        "operationId": "postOrganizationsInvite",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organizationId_invite_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user was invited",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/issues/security/teams": {
      "get": {
        "tags": [
          "Issues v1"
        ],
        "summary": "Returns issues grouped by team",
        "responses": {
          "200": {
            "description": "an object containing issues, issue counts by severity, issue expsoure windows for [0-30 days, 30-60 days, 60-90 days, over 90 days], issue percents and open issues over time each grouped by teamId. A teamId of null means the issue does not belong to a team.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/issues/security/release_groups": {
      "get": {
        "tags": [
          "Issues v1"
        ],
        "summary": "Returns issues grouped by release group",
        "responses": {
          "200": {
            "description": "an object containing issues, issue counts by severity, issue expsoure windows for [0-30 days, 30-60 days, 60-90 days, over 90 days], issue percents and open issues over time each grouped by release group ID.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          }
        }
      }
    },
    "/issues": {
      "get": {
        "tags": [
          "Issues v1"
        ],
        "summary": "Returns a list of issues in either a project, a release group, or the user's organization",
        "operationId": "listIssues",
        "parameters": [
          {
            "name": "scanScope[type]",
            "in": "query",
            "description": "the scope from which issues are requested",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "project",
                "releaseGroup"
              ]
            }
          },
          {
            "name": "scanScope[projectId]",
            "in": "query",
            "description": "for the project scanScope, the locator of the project",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanScope[revisionId]",
            "in": "query",
            "description": "for the project scanScope, the locator of the project's revision",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanScope[revisionScanId]",
            "in": "query",
            "description": "for the project scanScope, the ID of the revision scan",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanScope[vendoredScanId]",
            "in": "query",
            "description": "for the project scanScope, the ID of the vendored scan",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanScope[groupId]",
            "in": "query",
            "description": "for the releaseGroup scanScope, the ID of the group",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanScope[releaseId]",
            "in": "query",
            "description": "for the releaseGroup scanScope, the ID of the group's release",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scanScope[scanId]",
            "in": "query",
            "description": "for the releaseGroup scanScope, the ID of the release scan",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "maximum number of issues to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of issues to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "filter by the status of issues",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "exported",
                "resolved"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "filter by issue type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/IssueType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List the issues in a particular scope.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vulns/revisions/{revisionLocator}/next-safe-version": {
      "get": {
        "tags": [
          "Vulns"
        ],
        "summary": "Return next safe version of a package given a revisionLocator",
        "operationId": "revisionNextSafeVersion",
        "parameters": [
          {
            "name": "revisionLocator",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Next safe version",
            "content": {
              "applicaton/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevisionNextSafeVersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/vulns/revisions/next-safe-version": {
      "post": {
        "tags": [
          "Vulns"
        ],
        "summary": "Return a list next safe versions and an overall safe version for each locator group",
        "operationId": "nextSafeVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/revisions_nextsafeversion_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Next safe version listed by package then dependency version",
            "content": {
              "applicaton/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextSafeVersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/vulns/by-locator": {
      "post": {
        "tags": [
          "Vulns"
        ],
        "summary": "Provide vulnerability detials by FOSSA locator. Not public avaliable, contact sales",
        "operationId": "vulnsByLoctor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vulns_bylocator_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vulnerability data. If a locator is not vulnerable, no data will be returned",
            "content": {
              "applicaton/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnsByLocatorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "required": [
          "locator",
          "title"
        ],
        "type": "object",
        "properties": {
          "locator": {
            "type": "string",
            "example": "git+github.com/fossas/fossa-cli"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "policyId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "integer"
          },
          "qualityPolicyId": {
            "type": "integer"
          },
          "authors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organizationId": {
            "type": "integer"
          },
          "last_analyzed_revision": {
            "type": "string"
          },
          "issue_tracker_url": {
            "type": "string"
          },
          "issue_tracker_id": {
            "type": "string"
          },
          "issue_tracker_type": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2017-08-29T09:12:33.001Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2018-12-29T09:03:57.665Z"
          },
          "revisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Revision"
            }
          }
        }
      },
      "Revision": {
        "type": "object",
        "properties": {
          "loc": {
            "$ref": "#/components/schemas/Revision_loc"
          },
          "licenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Revision_licenses"
            }
          },
          "discoveredLicenses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locator": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "resolved": {
            "type": "boolean"
          },
          "unsupported": {
            "type": "boolean"
          },
          "parent_locator": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "declaredLicense": {
            "type": "string"
          },
          "source_type": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "unresolved_licensing_issue_count": {
            "type": "integer"
          },
          "unresolved_security_issue_count": {
            "type": "integer"
          },
          "unresolved_quality_issue_count": {
            "type": "integer"
          },
          "unresolved_issue_count": {
            "type": "integer"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organizationId": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "sso_only": {
            "type": "boolean"
          },
          "userRole": {
            "$ref": "#/components/schemas/User_userRole"
          },
          "enabled": {
            "type": "boolean"
          },
          "teamUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User_teamUsers"
            }
          },
          "email_verified": {
            "type": "boolean"
          },
          "tokens": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ReleaseGroupSecurityIssueSeverity": {
        "type": "object",
        "properties": {
          "releaseGroupId": {
            "$ref": "#/components/schemas/ReleaseGroupSecurityIssueSeverity_releaseGroupId"
          }
        }
      },
      "ReleaseGroupOpenSecurityIssuesExposureWindows": {
        "maxItems": 4,
        "minItems": 4,
        "type": "array",
        "description": "4 windows (0 - 30 days), (30 - 60 days), (60 - 90 days), and over 90 days",
        "items": {
          "$ref": "#/components/schemas/ReleaseGroupSecurityIssueSeverity"
        }
      },
      "ReleaseGroupOpenSecurityIssueOverTime": {
        "description": "open issues for each date grouped by release groups",
        "allOf": [
          {
            "properties": {
              "date": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ReleaseGroupSecurityIssueSeverity"
          }
        ]
      },
      "ReleaseGroupSecurityIssue": {
        "allOf": [
          {
            "properties": {
              "releaseGroupId": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/SecurityIssue"
          }
        ]
      },
      "TeamSecurityIssueSeverity": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SecurityIssueSeverity"
            }
          }
        }
      },
      "TeamOpenSecurityIssuesExposureWindows": {
        "maxItems": 4,
        "minItems": 4,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TeamSecurityIssueSeverity"
        }
      },
      "TeamOpenSecurityIssueOverTime": {
        "allOf": [
          {
            "properties": {
              "date": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/TeamSecurityIssueSeverity"
          }
        ]
      },
      "SecurityIssueSeverity": {
        "type": "object",
        "properties": {
          "critical": {
            "type": "number"
          },
          "high": {
            "type": "number"
          },
          "medium": {
            "type": "number"
          },
          "low": {
            "type": "number"
          },
          "unknown": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        }
      },
      "TeamSecurityIssue": {
        "allOf": [
          {
            "properties": {
              "teamId": {
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/SecurityIssue"
          }
        ]
      },
      "SecurityIssue": {
        "type": "object",
        "properties": {
          "cve": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "cveURL": {
            "type": "string"
          },
          "cvss": {
            "type": "number",
            "format": "double"
          },
          "cwes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityIssue_cwes"
            }
          },
          "description": {
            "type": "string"
          },
          "issuedOn": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "references": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "URL for the CWE reference"
            }
          },
          "resolvedAt": {
            "type": "string"
          },
          "revision": {
            "$ref": "#/components/schemas/SecurityIssue_revision"
          },
          "revisionId": {
            "type": "string"
          },
          "severity": {
            "type": "number"
          },
          "severityType": {
            "type": "string"
          }
        }
      },
      "IssueType": {
        "type": "string",
        "enum": [
          "unlicensed_dependency",
          "policy_conflict",
          "policy_flag",
          "vulnerability",
          "outdated_dependency",
          "blacklisted_dependency"
        ]
      },
      "Issue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/IssueType"
          },
          "revisionId": {
            "type": "string"
          },
          "resolved": {
            "type": "boolean"
          },
          "ruleId": {
            "type": "integer"
          },
          "vulnId": {
            "type": "integer"
          },
          "vulnerability": {
            "$ref": "#/components/schemas/Issue_vulnerability"
          },
          "licenseId": {
            "type": "integer"
          },
          "parents": {
            "type": "array",
            "description": "the projects or release groups in which the issue is found",
            "items": {
              "$ref": "#/components/schemas/Issue_parents"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2017-08-29T09:12:33.001Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2017-08-29T09:12:33.001Z"
          }
        }
      },
      "DependenciesResponse": {
        "type": "object",
        "properties": {
          "loc": {
            "$ref": "#/components/schemas/DependenciesResponse_loc"
          },
          "licenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Revision_licenses"
            }
          },
          "discoveredLicenses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locator": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "resolved": {
            "type": "boolean"
          },
          "unsupported": {
            "type": "boolean"
          },
          "declaredLicense": {
            "type": "string"
          },
          "DependencyLock": {
            "$ref": "#/components/schemas/DependenciesResponse_DependencyLock"
          },
          "project": {
            "$ref": "#/components/schemas/DependenciesResponse_project"
          },
          "unresolved_locators": {
            "type": "array",
            "description": "These are dependency locators as they were found in your project. They might include semver operators such as '^' or '>', which will be resolved by FOSSA to the appropriate matching version found in the registry.",
            "items": {
              "type": "string"
            }
          },
          "depth": {
            "type": "integer"
          },
          "ignored": {
            "type": "boolean"
          }
        }
      },
      "RevisionNextSafeVersionResponse": {
        "type": "object",
        "properties": {
          "nextSafeVersion": {
            "type": "string"
          }
        }
      },
      "NextSafeVersionResponse": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/NestedSafeVersionResponse"
        },
        "example": {
          "npm+vulnerable-node-package": {
            "3.1.2": "4.1.2",
            "3.2.2": "4.1.2",
            "2.1.2": "3.1.0",
            "provided-dep-version": "safe-version",
            "overallRemediation": "4.1.2"
          }
        }
      },
      "NestedSafeVersionResponse": {
        "type": "object",
        "properties": {
          "overallRemediation": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "3.1.2": "4.1.2",
          "3.2.2": "4.1.2",
          "2.1.2": "3.1.0",
          "provided-dep-version": "safe-version",
          "overallRemediation": "4.1.2"
        }
      },
      "VulnsByLocatorResponse": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/NestedVulnsByLocatorResponse"
        },
        "example": {
          "npm+vulnerable-package$1.0.3": {
            "packageData": {
              "displayName": "Vulnerable Package (1.2.3)",
              "description": null,
              "homepage": null
            },
            "vulnerabilities": [
              {
                "id": "CVE-2020-1234-npm+vulnerable-package",
                "description": null,
                "cwes": [
                  "CWE-123"
                ],
                "cvss": 7.5,
                "references": [
                  "https://npmjs.com"
                ],
                "affectedVersionRanges": [
                  "<1.1.0"
                ],
                "unaffectedVersionRanges": [
                  null
                ],
                "patchedVersionRanges": [
                  "1.1.0"
                ],
                "cve": "CVE-2020-1234",
                "cvssV2Vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
                "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
                "weaknesses": null,
                "nextSafeVersion": "1.1.0"
              }
            ]
          }
        }
      },
      "NestedVulnsByLocatorResponse": {
        "properties": {
          "packageData": {
            "$ref": "#/components/schemas/VulnsByLocatorPackageResponse"
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vulnerability"
            }
          }
        }
      },
      "VulnsByLocatorPackageResponse": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          }
        }
      },
      "Vulnerability": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cwes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cvss": {
            "type": "number"
          },
          "references": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "affectedVersionRanges": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unaffectedVersionRanges": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "patchedVersionRanges": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cve": {
            "type": "string"
          },
          "cvssV2Vector": {
            "type": "string"
          },
          "cvssV3Vector": {
            "type": "string"
          },
          "weaknesses": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "nextSafeVersion": {
            "type": "string"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "Discovered License Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_Discovered License Issues"
            }
          },
          "Package License Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_Package License Issues"
            }
          },
          "Quality Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_Quality Issues"
            }
          },
          "Vulnerability Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_Vulnerability Issues"
            }
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "Discovered License Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_Discovered License Issues"
            }
          },
          "Package License Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_Package License Issues"
            }
          },
          "Quality Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_Quality Issues"
            }
          },
          "Vulnerability Issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_Vulnerability Issues"
            }
          }
        }
      },
      "userId_permission_body": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "1 for Admin; 2 for Editor; 3 for Viewer; null for None",
            "nullable": true,
            "enum": [
              1,
              2,
              3
            ]
          }
        }
      },
      "userId_enabled_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "userId_teamroles_body": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "the ID of a team of which the user is a member",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "description": "4 for Team Admin; 5 for Team Editor; 6 for Team Viewer",
            "enum": [
              4,
              5,
              6
            ]
          }
        }
      },
      "roles_permissions": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "organization",
              "role"
            ]
          },
          "isCustom": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "integer",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/roles_permissions"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2017-08-29T09:12:33.001Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2018-12-29T09:03:57.665Z"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organizationId": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "autoAddUsers": {
            "type": "boolean"
          },
          "autoAddProjects": {
            "type": "boolean"
          }
        }
      },
      "teams_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "autoAddUsers": {
            "type": "boolean"
          },
          "defaultRoleId": {
            "type": "integer"
          },
          "uniqueIdentifier": {
            "type": "string"
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The created team's ID"
          },
          "name": {
            "type": "string",
            "description": "The team's name"
          },
          "autoAddUsers": {
            "type": "boolean"
          },
          "uniqueIdentifier": {
            "type": "string"
          },
          "teamUsers": {
            "type": "array",
            "example": "[]",
            "items": {
              "type": "object"
            }
          },
          "teamProjects": {
            "type": "array",
            "example": "[]",
            "items": {
              "type": "object"
            }
          },
          "teamReleaseGroups": {
            "type": "array",
            "example": "[]",
            "items": {
              "type": "object"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2017-08-29T09:12:33.001Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2018-12-29T09:03:57.665Z"
          }
        }
      },
      "teams_teamId_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "autoAddUsers": {
            "type": "boolean"
          },
          "defaultRoleId": {
            "type": "integer"
          },
          "uniqueIdentifier": {
            "type": "string"
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "the team's ID"
          },
          "name": {
            "type": "string",
            "description": "the team's name"
          },
          "autoAddUsers": {
            "type": "boolean"
          },
          "uniqueIdentifier": {
            "type": "string"
          },
          "teamUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_5_teamUsers"
            }
          },
          "teamProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_5_teamProjects"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2017-08-29T09:12:33.001Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2018-12-29T09:03:57.665Z"
          }
        }
      },
      "teamId_projects_body": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "a project locator"
            }
          }
        }
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "the team's ID"
          },
          "projects": {
            "type": "array",
            "description": "the team's new list of projects",
            "items": {
              "type": "string",
              "description": "a project locator"
            }
          }
        }
      },
      "teamsteamIdusers_users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "a user ID"
          },
          "roleId": {
            "type": "integer",
            "description": "The user's role in the team. 4 for Team Admin; 5 for Team Editor; 6 for Team Viewer. Not needed for the 'remove' action; if not set for the 'add' or 'replace' action, the team's default role is given to the user\n",
            "nullable": true
          }
        }
      },
      "teamId_users_body": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "add",
              "remove",
              "replace"
            ]
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teamsteamIdusers_users"
            }
          }
        }
      },
      "organizationId_invite_body": {
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "email address of user to invite"
            }
          }
        }
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamSecurityIssue"
            }
          },
          "openIssuesOverTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamOpenSecurityIssueOverTime"
            }
          },
          "openIssuesExposureWindows": {
            "$ref": "#/components/schemas/TeamOpenSecurityIssuesExposureWindows"
          },
          "issuePercents": {
            "$ref": "#/components/schemas/TeamSecurityIssueSeverity"
          },
          "issueCountBySeverity": {
            "$ref": "#/components/schemas/TeamSecurityIssueSeverity"
          }
        }
      },
      "inline_response_200_8": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReleaseGroupSecurityIssue"
            }
          },
          "openIssuesOverTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReleaseGroupOpenSecurityIssueOverTime"
            }
          },
          "openIssuesExposureWindows": {
            "$ref": "#/components/schemas/ReleaseGroupOpenSecurityIssuesExposureWindows"
          },
          "issuePercents": {
            "$ref": "#/components/schemas/ReleaseGroupSecurityIssueSeverity"
          },
          "issueCountBySeverity": {
            "$ref": "#/components/schemas/ReleaseGroupSecurityIssueSeverity"
          }
        }
      },
      "revisions_nextsafeversion_body": {
        "type": "object",
        "properties": {
          "revisions": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Revision Locator to check for next safe version"
            }
          }
        }
      },
      "vulns_bylocator_body": {
        "type": "object",
        "properties": {
          "locators": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Revision Locator to check for next safe version"
            }
          }
        }
      },
      "Revision_loc": {
        "type": "object",
        "properties": {
          "fetcher": {
            "type": "string",
            "description": "The ecosystem that the revision was found in"
          },
          "package": {
            "type": "string"
          },
          "revision": {
            "type": "string"
          }
        },
        "description": "This is an exploded view of the revision's locator"
      },
      "Revision_licenses": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "revisionId": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "licenseId": {
            "type": "string"
          },
          "ignored": {
            "type": "boolean"
          },
          "copyright": {
            "type": "string"
          }
        }
      },
      "User_userRole_role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "organizationId": {
            "type": "number",
            "nullable": true
          },
          "isCustom": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "organization"
            ]
          }
        }
      },
      "User_userRole": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "number"
          },
          "role": {
            "$ref": "#/components/schemas/User_userRole_role"
          }
        },
        "nullable": true
      },
      "User_team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "User_teamUsers": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "number"
          },
          "team": {
            "$ref": "#/components/schemas/User_team"
          }
        }
      },
      "ReleaseGroupSecurityIssueSeverity_releaseGroupId": {
        "type": "object",
        "properties": {
          "null": {
            "$ref": "#/components/schemas/SecurityIssueSeverity"
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/SecurityIssueSeverity"
        }
      },
      "SecurityIssue_cwes": {
        "type": "object",
        "properties": {
          "cwe": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "SecurityIssue_revision": {
        "type": "object",
        "properties": {
          "fetcher": {
            "type": "string"
          },
          "package": {
            "type": "string"
          },
          "revision": {
            "type": "string"
          }
        }
      },
      "Issue_vulnerability": {
        "type": "object",
        "properties": {
          "cvss": {
            "type": "number"
          }
        }
      },
      "Issue_IssueProject": {
        "type": "object",
        "properties": {
          "resolved": {
            "type": "boolean"
          },
          "resolvedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2017-08-29T09:12:33.001Z"
          },
          "issue_tracker_id": {
            "type": "string"
          }
        }
      },
      "Issue_parents": {
        "type": "object",
        "properties": {
          "locator": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "IssueProject": {
            "$ref": "#/components/schemas/Issue_IssueProject"
          }
        }
      },
      "DependenciesResponse_loc": {
        "type": "object",
        "properties": {
          "fetcher": {
            "type": "string",
            "description": "The ecosystem that the dependency was found in"
          },
          "package": {
            "type": "string"
          },
          "revision": {
            "type": "string"
          }
        },
        "description": "This is an exploded view of the dependency's locator"
      },
      "DependenciesResponse_DependencyLock": {
        "type": "object",
        "properties": {
          "locator": {
            "type": "string",
            "description": "This is the resolved locator of the dependency.\n*Note*: If this value is `null` then this is a sentinel record that represents all of the dependencies that could not be resolved. Check the `unresolved_locators` attribute for more information."
          },
          "unresolved_locators": {
            "type": "array",
            "description": "These are dependency locators as they were found in your project. They might include semver operators such as '^' or '>', which will be resolved by FOSSA to the appropriate matching version found in the registry.",
            "items": {
              "type": "string"
            }
          },
          "depth": {
            "type": "integer"
          },
          "root": {
            "type": "string",
            "description": "The locator of the revision that this dependency belongs to."
          }
        }
      },
      "DependenciesResponse_project": {
        "type": "object",
        "properties": {
          "locator": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "scm_url": {
            "type": "string"
          },
          "authors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "This provides additional data about the dependency"
      },
      "inline_response_200_Discovered License Issues": {
        "type": "object",
        "properties": {
          "Project": {
            "type": "string"
          },
          "Revision": {
            "type": "string"
          },
          "Flagged by Policy": {
            "type": "string"
          },
          "Rule Type": {
            "type": "string"
          },
          "License ID": {
            "type": "string"
          },
          "License Name": {
            "type": "string"
          },
          "File Path": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          }
        }
      },
      "inline_response_200_Package License Issues": {
        "type": "object",
        "properties": {
          "Dependency": {
            "type": "string"
          },
          "Revision": {
            "type": "string"
          },
          "Flagged by Policy": {
            "type": "string"
          },
          "Issue Type": {
            "type": "string"
          },
          "License": {
            "type": "string"
          },
          "Affected Project": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          }
        }
      },
      "inline_response_200_Quality Issues": {
        "type": "object",
        "properties": {
          "Dependency": {
            "type": "string"
          },
          "Revision": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Affected Project": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          }
        }
      },
      "inline_response_200_Vulnerability Issues": {
        "type": "object",
        "properties": {
          "Dependency": {
            "type": "string"
          },
          "Revision": {
            "type": "string"
          },
          "CVE": {
            "type": "string"
          },
          "Affected Project": {
            "type": "string"
          },
          "Reference": {
            "type": "string"
          },
          "CWE": {
            "type": "string"
          },
          "CVSS Score": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          },
          "Remediation Advice": {
            "type": "string"
          }
        }
      },
      "inline_response_200_1_Vulnerability Issues": {
        "type": "object",
        "properties": {
          "Dependency": {
            "type": "string"
          },
          "Revision": {
            "type": "string"
          },
          "CVE": {
            "type": "string"
          },
          "Affected Project": {
            "type": "string"
          },
          "References": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "CWES": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "CVSS Score": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          },
          "Remediation Advice": {
            "type": "string"
          }
        }
      },
      "inline_response_200_5_teamUsers": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer"
          }
        }
      },
      "inline_response_200_5_teamProjects": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "tokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "key"
      }
    }
  }
}